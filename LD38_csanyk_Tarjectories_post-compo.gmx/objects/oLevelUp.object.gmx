<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.dashboard.level_misses[global.level] == 0
     congratulation = "Superb! ";
else congratulation = "Success! ";

text = congratulation + "Advance to next level!";

///End of level bonus scoring
timer_bonus = global.level * global.dashboard.level_timer[global.level] * 10;


if timer_bonus &gt; 0
{
    text += "##Timer bonus: " + string(timer_bonus);
    global.score += timer_bonus;
}

if global.dashboard.level_misses[global.level] == 0
{
    perfect_bonus = power(10000 * global.dashboard.level_hits[global.level], instance_number(oPlanet)); //if you get a perfect score on a multi-planet level you deserve it
    text += "##Perfect bonus: " + string(perfect_bonus) + "!!!!";
    global.score += perfect_bonus;
}
else
{
    level_bonus = global.dashboard.level_points[global.level] * global.dashboard.level_hits[global.level] / global.dashboard.level_misses[global.level];
    text += "##Level bonus: " + string(level_bonus);
    global.score += level_bonus;
}


countdown_start = false;

alarm[1]= 1*room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>text += "###Press a key to continue...";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Advance the level
global.level++;

with(global.dashboard)
{
    level_shots[global.level]  = 0;
    level_hits[global.level]   = 0;
    level_misses[global.level] = 0;
    level_near_misses[global.level]  = 0;
    level_timer[global.level]  = 0;
    level_points[global.level] = 0;
}

//Set up level timer
with global.dashboard
{
    level_timer[global.level] = (max(5, 15 - global.level) + 3 * instance_number(oTarget)) * room_speed;
}

//Add 60 seconds to bonus timer if &gt;1 planets
if instance_number(oPlanet) &gt; 1 
{
    global.dashboard.level_timer[global.level] += 30 * room_speed;
}

if (global.level == 9)
{
    room_goto(room_next(room));
    global.dashboard.level_timer[global.level] += 30 * room_speed;  
}
else
{
    //Destroy the planet, player from the previous level
    with oPlayerTurret instance_destroy();
    
    var planet_count = 0;
    with oPlanet
    {
        instance_destroy();
        planet_count++;   
    }
    
    //Create new planet(s)
    var p, i, x_avg = 0, y_avg = 0;
    for (i = 0; i &lt; planet_count; i++)
    {
        p[i] = instance_create(room_width*0.5, room_height*0.5, oPlanet);
        
        //Now that the size of the new planet is known, ensure it is at least 100 px away from the edge of the room
        p[i].x = irandom_range(p[i].radius + 100, room_width - (p[i].radius + 100));
        p[i].y = irandom_range(p[i].radius + 100, room_height - (p[i].radius + 100));
        
        p[i].x = clamp(p[i].x, p[i].radius + 100, room_width - p[i].radius - 100);
        p[i].y = clamp(p[i].y, p[i].radius + 100, room_height - p[i].radius - 100);
        
        x_avg += p[i].x;
        y_avg += p[i].y;
    }
    
    //Shift the position of the planets such that their average position is the center of the room.
    x_avg = x_avg / planet_count;
    y_avg = y_avg / planet_count;
    
    x_offset = x_avg - (room_width * 0.5);
    y_offset = y_avg - (room_height * 0.5);
    
    
    with oPlanet
    {
        x -= other.x_offset;
        y -= other.y_offset;
    }    
    
    
    //Add a player to planet 0
    if instance_number(oPlanet) &gt; 1
    {
        base = choose(p[0], p[1]);
    }
    else
    {
        base = p[0];
    }
    
    with base
    {
        player = instance_create(x + radius, y + radius, oPlayerTurret);
    }
}

if (global.level == 19)
{
    room_goto(room_next(room));
}

//Capture the level data
//with(oLevel_data_manager) instance_destroy(); // Destroy the old one.
//instance_create(10, 640, oLevel_data_manager); // Create a new one to capture the fresh level data.

//Destroy the Level Up object
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_set_color(make_color_rgb(223, 223, 223));//draw_set_color(c_white);
draw_set_font(fnDashboard);
draw_text(view_wport[0]*0.5, view_hport[0]*0.5, text); 


if countdown_start &amp;&amp; (global.level != 18)
{
    countdown = alarm[0] div room_speed;
    draw_set_font(fnCountdown);
    draw_text(view_wport[0]*0.5, view_hport[0]*0.5, string(countdown));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if alarm[1] == -1 and !countdown_start
{
    if debug_mode 
    {
        alarm[0] = 1 
    }
    else 
    {
        if global.level == 18
        {
            alarm[0] = 1;
        }
        else
        {
            alarm[0] =room_speed * 4;
        }
    }
    text = "";
    countdown_start = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
