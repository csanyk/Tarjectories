<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dashboard_text = "";

global.level = 1;

//Stats
total_shots       = 0;
total_hits        = 0;
total_misses      = 0;
total_near_misses = 0;

level_shots[global.level]       = 0;
level_hits[global.level]        = 0;
level_misses[global.level]      = 0;
level_near_misses[global.level] = 0;
level_points[global.level]      = 0;

//Level timer
level_timer[global.level]       = 0;

//Scorekeeping
score                           = 0;
global.consecutive_hits         = 0;

global.eyes_unlocked            = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update the dashboard text
//if instance_exists(oPlayerTurret)
//{
//    var d = "";
//    if oPlayerTurret.elevation &gt; 0 d = "CCW "; 
//    if oPlayerTurret.elevation &lt; 0 d = "CW  ";
    
//    dashboard_text = "Level: " + string(global.level) + "            "  +  "     Time: " + string(level_timer[global.level] div room_speed)  + "#" +
//                     "Score: " + string(score) +
//                     "##" + 
//                     "Gravity: ";
                     
//    with oPlanet{ global.dashboard.dashboard_text += string(g_force) + " ";}

//    dashboard_text += "#Elevation: " + d + string(90 - abs(oPlayerTurret.elevation)) +  "#";
//    dashboard_text += "Power: " + string(oPlayerTurret.shot_power) + "##";
//    dashboard_text += "Hits:   " + string(level_hits[global.level]) + "#" +
//                      "Misses: " + string(level_misses[global.level]); 


dashboard_text = ""; 

dashboard_text  = "Level: " + string(global.level) + "#";
dashboard_text += "Score: " + string(score) + "#";
dashboard_text += "Hit/Miss: " + string(level_hits[global.level]) + "/" + string(level_misses[global.level]) + "#";
dashboard_text += "Bonus time: " + string(level_timer[global.level] div room_speed);

if debug_mode 
{
   dashboard_text += "##FPS: " + string(fps_real) + "##";
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (room == rmGame)
{
    draw_set_alpha(0.2);
    draw_set_color(c_black);
    draw_rectangle(0,0, string_width(dashboard_text) + 20, string_height(dashboard_text) + 20, false);
    
    draw_set_alpha(1);
    draw_set_color(c_yellow);
    draw_set_font(fnDashboard);
    draw_set_halign(fa_left);
    draw_set_valign(fa_top);
    draw_text(x, y, dashboard_text);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
